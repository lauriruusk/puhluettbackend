{"version":3,"sources":["components/AddPerson.js","components/PrintPerson.js","components/FilterPerson.js","services/persondata.js","App.js","index.js"],"names":["AddPerson","newPerson","newName","handleNewName","pNum","handleNewPNum","onSubmit","value","onChange","placeholder","type","PrintPerson","persons","filtr","hDel","filter","person","name","toLowerCase","includes","map","p","number","onClick","FilterPerson","handleFilter","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setPNum","setFiltr","errorMessage","setErrorMessage","useEffect","persondata","initialPersons","event","target","preventDefault","personObject","some","e","window","confirm","oldPersonTemp","find","newPersonTemp","updatedPerson","catch","error","returnedPerson","concat","removedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.380f6e35.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AddPerson = ({newPerson, newName, handleNewName, pNum, handleNewPNum}) => {\r\n\r\n    return (\r\n    <div>\r\n      <form onSubmit={newPerson}>\r\n        <div>\r\n          Name: <input value={newName} onChange={handleNewName} placeholder=\"Name here\" />\r\n        </div>\r\n        <div>\r\n          Phone: <input value={pNum} onChange={handleNewPNum} placeholder=\"0401234567\" />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default AddPerson","import React from 'react'\r\n\r\nconst PrintPerson = ({persons, filtr, hDel}) => {\r\n    return (\r\n\r\n        <div>\r\n            {persons.filter(person => person.name.toLowerCase().includes(filtr)).map(p =>\r\n            <p key={p.name}>{p.name} {p.number} <button onClick={() => hDel(p)} >delete</button></p>)}\r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default PrintPerson","import React from 'react'\r\n\r\nconst FilterPerson = ({handleFilter}) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input id=\"fl2\" onChange={handleFilter} ></input><br/><br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterPerson","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    del\r\n}","import React, { useState, useEffect } from 'react'\n\nimport AddPerson from './components/AddPerson'\nimport PrintPerson from './components/PrintPerson'\nimport FilterPerson from './components/FilterPerson'\nimport persondata from './services/persondata'\n// import { render } from '@testing-library/react'\n\nconst Notification = ({message}) => {\n  //console.log(message)\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div id=\"error\" className=\"error\" >\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ pNum, setPNum ] = useState('')\n  const [ filtr, setFiltr ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState('default')\n  // const [ luokka, setLuokka ] = useState('')\n  // const id = 'error'\n  // let messageTemp = 'placeholder'\n  \n  //hakee alkutiedot palvelimelta\n  useEffect(() => {\n    persondata\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  // Lisää henkilön tiedot. Mikäli nimi on jo tallennettu, ohjelma ei hyväksy\n  const newPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName, number: pNum\n    }\n\n    // tarkistaa onko nimi jo luettelossa\n    if (persons.some((e) => e.name.toLowerCase() === personObject.name.toLowerCase())) {\n      // jos nimi on luettelossa, kysyy päivitetäänkö numero\n      if (window.confirm(`${newName} is already in phonebook, replace the old number with a new one?`)) {\n        let oldPersonTemp = persons.find(p => p.name.toLowerCase() === personObject.name.toLowerCase())\n        let newPersonTemp = {...personObject, pNum}\n        persondata\n          .update(oldPersonTemp.id, newPersonTemp)\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== oldPersonTemp.id ? person : updatedPerson))\n          })\n          .catch(error => {\n            setErrorMessage(`${newName} already exists`)\n          })\n          // setErrorMessage(`${newName} updated successfully`)\n        // setLuokka(\"success\")\n        // console.log(luokka)\n        // content({id, luokka, errorMessage} )\n      }\n    } else {\n      // jos nimeä ei ole luettelossa, lisää sen\n      persondata\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))})\n          setErrorMessage(`${newName} added successfully`)\n        // setLuokka(\"success\")\n        // console.log(luokka)\n        // content({id, luokka, errorMessage} )\n        setNewName('')\n        setPNum('')\n    }\n  }\n\n  // käsittelijät nimelle, puhelinnumerolle ja filtterille\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewPNum = (event) => {\n    setPNum(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFiltr(event.target.value)\n  }\n\n  // poistaa henkilön\n  const handleDel = (person) => {\n    if(window.confirm('Are you sure?')) {\n      persondata\n      .del(person.id)\n      .then(removedPerson => {setPersons(persons.filter(p => p.id!==person.id))})\n      // setErrorMessage(`${person.name} deleted successfully`)\n      // setLuokka(\"failure\")\n      // content({id, luokka, errorMessage} )\n    }\n  }\n\n  // vaihtaa virheilmoituksen luokkaa. Tarkoitus oli saada luokkaa vaihtamalla ilmoituksille eri tyylit. en kuitenkaan saanut toimimaan halutulla tavalla.\n  // Menin jopa niin pitkälle että etsin muiden palautuksia aiheesta. Vaikuttaisi ettei olennaista eroa ole.\n  // tästä erityisesti toivoisin palautetta, olisi hyvä tietää mikä meni pieleen\n  // const content = ({id, luokka, message}) => {\n  //   let temp = document.querySelector(\"#\" + id )\n  //   let luokkaTemp = luokka\n  //   temp.className = luokkaTemp\n  //   temp.message = message\n  //   console.log(temp.message)\n  //   setErrorMessage(message)\n  //   console.log(temp)\n  //   // window.location.reload(false)\n\n  //   // kloonaa vanhan luokan ja korvaa vanhan uudella\n  //   let elm = temp\n  //   let newelm = elm.cloneNode(true)\n  //   // console.log(newelm)\n  //   elm.parentNode.replaceChild(newelm, elm)\n    \n  // }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <FilterPerson handleFilter={handleFilter} />\n      <AddPerson newPerson = {newPerson} handleNewName = {handleNewName} handleNewPNum = {handleNewPNum}\n       newName = {newName} pNum = {pNum} />\n      <h2>Numbers</h2>\n      <div>\n          <PrintPerson filtr={filtr} persons={persons} hDel={handleDel} /> \n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}